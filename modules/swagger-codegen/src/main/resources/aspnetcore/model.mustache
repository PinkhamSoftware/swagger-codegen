{{>partial_header}}
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using HomesEngland.Domain;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

{{#models}}
{{#model}}
namespace HomesEngland.Domain
{ {{#isEnum}}{{>enumClass}}{{/isEnum}}{{^isEnum}}
    /// <summary>
    /// {{description}}
    /// </summary>
    [Table("{{classname}}")]
    public partial class {{classname}}Entity : I{{classname}}
    { 
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column("id")]
        public int Id { get; set; }
        [Column("modifieddatetime")]
        public DateTime ModifiedDateTime { get; set; }
        {{#vars}}{{#isEnum}}{{>enumClass}}{{/isEnum}}{{#items.isEnum}}{{#items}}{{>enumClass}}{{/items}}{{/items.isEnum}}
        /// <summary>
        /// {{^description}}Gets or Sets {{{name}}}{{/description}}{{#description}}{{description}}{{/description}}
        /// </summary>
        {{#description}}
        /// <value>{{description}}</value>
        {{/description}}
        {{#required}}
        {{/required}}
        [Column("{{baseName}}")]
        {{#isEnum}}
        public {{{datatypeWithEnum}}}{{#isEnum}}{{^isContainer}}?{{/isContainer}}{{/isEnum}} {{name}} { get; set; }
        {{/isEnum}}
        {{^isEnum}}
        public {{{datatype}}} {{name}} { get; {{#isReadOnly}}private {{/isReadOnly}}set; }
        {{/isEnum}}
        {{#hasMore}}
        {{/hasMore}}
        {{/vars}}

        public {{classname}}Entity(I{{classname}} document){
        }

        public {{classname}}Entity(I{{classname}} document){
            {{#vars}}
            {{name}} = document.{{name}};
            {{/vars}}
        }

        public {{classname}}Entity(Create{{classname}}Request request)
        {
            // todo map to document
            {{#vars}}
            {{name}} = request.{{name}};
            {{/vars}}
        }
    }

    public interface I{{classname}}:IDatabaseEntity<int>
    {
        int? DocumentVersionId { get; set; }
        //todo vars here
        {{#vars}}{{#isEnum}}{{>enumClass}}{{/isEnum}}{{#items.isEnum}}{{#items}}{{>enumClass}}{{/items}}{{/items.isEnum}}
        /// <summary>
        /// {{^description}}Gets or Sets {{{name}}}{{/description}}{{#description}}{{description}}{{/description}}
        /// </summary>
        {{#description}}
        /// <value>{{description}}</value>
        {{/description}}
        {{#required}}
        {{/required}}
        [Column("{{baseName}}")]
        {{#isEnum}}
        public {{{datatypeWithEnum}}}{{#isEnum}}{{^isContainer}}?{{/isContainer}}{{/isEnum}} {{name}} { get; set; }
        {{/isEnum}}
        {{^isEnum}}
        public {{{datatype}}} {{name}} { get; {{#isReadOnly}}private {{/isReadOnly}}set; }
        {{/isEnum}}
        {{#hasMore}}
        {{/hasMore}}
        {{/vars}}
    }

    /// <summary>
    /// {{description}}
    /// </summary>
    public partial class {{classname}}CsvModel
    { {{#vars}}{{#isEnum}}{{>enumClass}}{{/isEnum}}{{#items.isEnum}}{{#items}}{{>enumClass}}{{/items}}{{/items.isEnum}}
        /// <summary>
        /// {{^description}}Gets or Sets {{{name}}}{{/description}}{{#description}}{{description}}{{/description}}
        /// </summary>
        {{#description}}
        /// <value>{{description}}</value>
        {{/description}}
        [Name("{{baseName}}")]
        {{#isEnum}}
        public {{{datatypeWithEnum}}}{{#isEnum}}{{^isContainer}}?{{/isContainer}}{{/isEnum}} {{name}} { get; set; }
        {{/isEnum}}
        {{^isEnum}}
        public {{{datatype}}} {{name}} { get; {{#isReadOnly}}private {{/isReadOnly}}set; }
        {{/isEnum}}
        {{#hasMore}}
        {{/hasMore}}
        {{/vars}}
    }
{{/isEnum}}
{{/model}}
{{/models}}
}
